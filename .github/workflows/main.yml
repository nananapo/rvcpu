on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'
jobs:
  riscv-tests-p:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install iverilog
        run: |
          sudo apt-get install -y autoconf gperf
          git clone https://github.com/steveicarus/iverilog.git
          cd iverilog
          git checkout --track -b v12-branch origin/v12-branch
          sh autoconf.sh
          ./configure
          make
          sudo sh -c "make install"
      - name: Test
        run: |
          cd test && python3 test.py -p-
  riscv-tests-v:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install iverilog
        run: |
          sudo apt-get install -y autoconf gperf
          git clone https://github.com/steveicarus/iverilog.git
          cd iverilog
          git checkout --track -b v12-branch origin/v12-branch
          sh autoconf.sh
          ./configure
          make
          sudo sh -c "make install"
      - name: Test
        run: |
          cd test && python3 test.py -v-
  verilator-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install verilator
        run: |
          sudo apt-get -y install verilator
          verilator --version
          sudo apt-get -y remove verilator
          git clone https://github.com/verilator/verilator
          cd verilator
          git checkout v5.016
          unset VERILATOR_ROOT
          autoconf
          ./configure
          make
          sudo make install
      - name: Lint
        run: |
          cd src
          make v
  coremark-bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install verilator
        run: |
          sudo apt-get -y install verilator
      - name: Test
        run: |
          cd src
          rm -rf obj_dir
          verilator --cc -DDEBUG -DFAST_UART -DOPTION="-DMEM_FILE=\\\"../test/bench/coremark/output/code.bin.aligned\\\"" test_verilator.sv --exe test_kenel_verilator_main.cpp
          make -j -C obj_dir/ -f Vtest_verilator.mk Vtest_verilator
          cd ../.github/workflows
          python3 coremark.py
  chiseltest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install verilator
        run: |
          sudo apt-get -y install verilator
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 8
          cache: sbt
      - name: Build and test
        run: |
          cd test/chisel
          ln -s ../../../../../src/ src/test/resources/ 
          sbt test